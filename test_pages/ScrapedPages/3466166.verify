{"title":"How to check if running in Cygwin, Mac or Linux?","commands":["pax\u003e uname -a\nCYGWIN_NT-5.1 IBM-L3F3936 1.5.25(0.156/4/2) 2008-06-12 19:34 i686 Cygwin\n\npax\u003e uname -s\nCYGWIN_NT-5.1 \u0026\u0026 unameOut\u003d\"$(uname -s)\"\ncase \"${unameOut}\" in\n    Linux*)     machine\u003dLinux;;\n    Darwin*)    machine\u003dMac;;\n    CYGWIN*)    machine\u003dCygwin;;\n    MINGW*)     machine\u003dMinGw;;\n    *)          machine\u003d\"UNKNOWN:${unameOut}\"\nesac\necho ${machine} \u0026\u0026 ","#!/usr/bin/env bash\n\nif [ \"$(uname)\" \u003d\u003d \"Darwin\" ]; then\n    # Do something under Mac OS X platform        \nelif [ \"$(expr substr $(uname -s) 1 5)\" \u003d\u003d \"Linux\" ]; then\n    # Do something under GNU/Linux platform\nelif [ \"$(expr substr $(uname -s) 1 10)\" \u003d\u003d \"MINGW32_NT\" ]; then\n    # Do something under 32 bits Windows NT platform\nelif [ \"$(expr substr $(uname -s) 1 10)\" \u003d\u003d \"MINGW64_NT\" ]; then\n    # Do something under 64 bits Windows NT platform\nfi \u0026\u0026 ","#!/bin/sh\n\ncase \"$(uname -s)\" in\n\n   Darwin)\n     echo \u0027Mac OS X\u0027\n     ;;\n\n   Linux)\n     echo \u0027Linux\u0027\n     ;;\n\n   CYGWIN*|MINGW32*|MSYS*)\n     echo \u0027MS Windows\u0027\n     ;;\n\n   # Add here more strings to compare\n   # See correspondence table at the bottom of this answer\n\n   *)\n     echo \u0027other OS\u0027 \n     ;;\nesac \u0026\u0026 ifdef MSVC     # Avoid the MingW/Cygwin sections\n    uname_S :\u003d Windows\nelse                          # If uname not available \u003d\u003e \u0027not\u0027 \n    uname_S :\u003d $(shell sh -c \u0027uname -s 2\u003e/dev/null || echo not\u0027)\nendif\n\n# Avoid nesting \"if .. else if .. else .. endif endif\"\n# because maintenance of matching if/else/endif is a pain\n\nifeq ($(uname_S),Windows)\n    CC :\u003d cl \nendif\nifeq ($(uname_S),OSF1)\n    CFLAGS +\u003d -D_OSF_SOURCE\nendif\nifeq ($(uname_S),Linux)\n    CFLAGS +\u003d -DNDEBUG\nendif\nifeq ($(uname_S),GNU/kFreeBSD)\n    CFLAGS +\u003d -D_BSD_ALLOC\nendif\nifeq ($(uname_S),UnixWare)\n    CFLAGS +\u003d -Wextra\nendif\n... \u0026\u0026 ","case \"$OSTYPE\" in\n  linux*)   echo \"Linux / WSL\" ;;\n  darwin*)  echo \"Mac OS\" ;; \n  win*)     echo \"Windows\" ;;\n  msys*)    echo \"MSYS / MinGW / Git Bash\" ;;\n  cygwin*)  echo \"Cygwin\" ;;\n  bsd*)     echo \"BSD\" ;;\n  solaris*) echo \"Solaris\" ;;\n  *)        echo \"unknown: $OSTYPE\" ;;\nesac \u0026\u0026 ","#!/bin/bash\n\nif [ \"$(uname)\" \u003d\u003d \"Darwin\" ]\nthen\n echo Do something under Mac OS X platform\nelif [ \"$(expr substr $(uname -s) 1 5)\" \u003d\u003d \"Linux\" ]\nthen\n  echo Do something under Linux platform\nelif [ -n \"$COMSPEC\" -a -x \"$COMSPEC\" ]\nthen \n  echo $0: this script does not support Windows \\:\\(\nfi \u0026\u0026 "]}