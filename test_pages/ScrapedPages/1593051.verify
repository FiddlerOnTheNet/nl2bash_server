{"title":"How to programmatically determine the current checked out Git branch","commands":["branch_name\u003d\"$(git symbolic-ref HEAD 2\u003e/dev/null)\" ||\nbranch_name\u003d\"(unnamed branch)\"     # detached HEAD\n\nbranch_name\u003d${branch_name##refs/heads/} \u0026\u0026 branch_name\u003d$(git symbolic-ref -q HEAD)\nbranch_name\u003d${branch_name##refs/heads/}\nbranch_name\u003d${branch_name:-HEAD} \u0026\u0026 ","git rev-parse --symbolic-full-name --abbrev-ref HEAD \u0026\u0026 git symbolic-ref --short -q HEAD \u0026\u0026 ",null,"$ git rev-parse --abbrev-ref HEAD\nmaster \u0026\u0026 ","git symbolic-ref --short -q HEAD \u0026\u0026 git branch  --no-color \u0026\u0026 git branch  --no-color  | grep -E \u0027^\\*\u0027 \u0026\u0026 * currentBranch \u0026\u0026 sed \u0027s/\\*[^a-z]*//g\u0027\ncut -d \u0027 \u0027 -f 2\nawk \u0027{print $2}\u0027 \u0026\u0026 git branch  --no-color  | grep -E \u0027^\\*\u0027 | sed \u0027s/\\*[^a-z]*//g\u0027\n git branch  --no-color  | grep -E \u0027^\\*\u0027 | sed cut -d \u0027 \u0027 -f 2\n git branch  --no-color  | grep -E \u0027^\\*\u0027 | awk \u0027{print $2}\u0027 \u0026\u0026 cmd || echo \u0027defualt value\u0027; \u0026\u0026 function get_branch() {\n      git branch --no-color | grep -E \u0027^\\*\u0027 | awk \u0027{print $2}\u0027 \\\n        || echo \"default_value\"\n      # or\n      # git symbolic-ref --short -q HEAD || echo \"default_value\";\n} \u0026\u0026 branch_name\u003d`get_branch`;\necho $branch_name; \u0026\u0026 "]}