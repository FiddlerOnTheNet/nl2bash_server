{"title":"How do I split a string on a delimiter in Bash?","commands":["IFS\u003d\u0027;\u0027 read -ra ADDR \u003c\u003c\u003c \"$IN\"\nfor i in \"${ADDR[@]}\"; do\n    # process \"$i\"\ndone \u0026\u0026 while IFS\u003d\u0027;\u0027 read -ra ADDR; do\n      for i in \"${ADDR[@]}\"; do\n          # process \"$i\"\n      done\n done \u003c\u003c\u003c \"$IN\" \u0026\u0026 ","IN\u003d\"bla@some.com;john@home.com\"\narrIN\u003d(${IN//;/ }) \u0026\u0026 ","for i in $(echo $IN | tr \";\" \"\\n\")\ndo\n  # process\ndone \u0026\u0026 ","IN\u003d\"bla@some.com;john@home.com\" \u0026\u0026 IN\u003d\"bla@some.com;john@home.com;Full Name \u003cfulnam@other.org\u003e\" \u0026\u0026 var\u003d\"bla@some.com;john@home.com;Full Name \u003cfulnam@other.org\u003e\" \u0026\u0026 oIFS\u003d\"$IFS\"\nIFS\u003d\";\"\ndeclare -a fields\u003d($var)\nIFS\u003d\"$oIFS\"\nunset oIFS \u0026\u0026 IFS\u003d\\; read -a fields \u003c\u003c\u003c\"$var\" \u0026\u0026 set | grep ^IFS\u003d\nIFS\u003d$\u0027 \\t\\n\u0027 \u0026\u0026 set | grep ^fields\u003d\\\\\\|^var\u003d\nfields\u003d([0]\u003d\"bla@some.com\" [1]\u003d\"john@home.com\" [2]\u003d\"Full Name \u003cfulnam@other.org\u003e\")\nvar\u003d\u0027bla@some.com;john@home.com;Full Name \u003cfulnam@other.org\u003e\u0027 \u0026\u0026 declare -p var fields\ndeclare -- var\u003d\"bla@some.com;john@home.com;Full Name \u003cfulnam@other.org\u003e\"\ndeclare -a fields\u003d([0]\u003d\"bla@some.com\" [1]\u003d\"john@home.com\" [2]\u003d\"Full Name \u003cfulnam@other.org\u003e\") \u0026\u0026 for x in \"${fields[@]}\";do\n    echo \"\u003e [$x]\"\n    done\n\u003e [bla@some.com]\n\u003e [john@home.com]\n\u003e [Full Name \u003cfulnam@other.org\u003e] \u0026\u0026 while [ \"$fields\" ] ;do\n    echo \"\u003e [$fields]\"\n    fields\u003d(\"${fields[@]:1}\")\n    done\n\u003e [bla@some.com]\n\u003e [john@home.com]\n\u003e [Full Name \u003cfulnam@other.org\u003e] \u0026\u0026 printf \"\u003e [%s]\\n\" \"${fields[@]}\"\n\u003e [bla@some.com]\n\u003e [john@home.com]\n\u003e [Full Name \u003cfulnam@other.org\u003e] \u0026\u0026 ${var#*SubStr}  # will drop begin of string up to first occur of `SubStr`\n${var##*SubStr} # will drop begin of string up to last occur of `SubStr`\n${var%SubStr*}  # will drop part of string from last occur of `SubStr` to the end\n${var%%SubStr*} # will drop part of string from first occur of `SubStr` to the end \u0026\u0026 var\u003d\"bla@some.com;john@home.com;Full Name \u003cfulnam@other.org\u003e\"\nwhile [ \"$var\" ] ;do\n    iter\u003d${var%%;*}\n    echo \"\u003e [$iter]\"\n    [ \"$var\" \u003d \"$iter\" ] \u0026\u0026 \\\n        var\u003d\u0027\u0027 || \\\n        var\u003d\"${var#*;}\"\n  done\n\u003e [bla@some.com]\n\u003e [john@home.com]\n\u003e [Full Name \u003cfulnam@other.org\u003e] \u0026\u0026 ","IN\u003d\"bla@some.com;john@home.com\" \nset -- \"$IN\" \nIFS\u003d\";\"; declare -a Array\u003d($*) \necho \"${Array[@]}\" \necho \"${Array[0]}\" \necho \"${Array[1]}\" \u0026\u0026 "]}