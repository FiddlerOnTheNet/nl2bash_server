{"title":"How to urlencode data for curl command?","commands":["curl \\\n    --data-urlencode \"paramName\u003dvalue\" \\\n    --data-urlencode \"secondParam\u003dvalue\" \\\n    http://example.com \u0026\u0026 ","rawurlencode() {\n  local string\u003d\"${1}\"\n  local strlen\u003d${#string}\n  local encoded\u003d\"\"\n  local pos c o\n\n  for (( pos\u003d0 ; pos\u003cstrlen ; pos++ )); do\n     c\u003d${string:$pos:1}\n     case \"$c\" in\n        [-_.~a-zA-Z0-9] ) o\u003d\"${c}\" ;;\n        * )               printf -v o \u0027%%%02x\u0027 \"\u0027$c\"\n     esac\n     encoded+\u003d\"${o}\"\n  done\n  echo \"${encoded}\"    # You can either set a return variable (FASTER) \n  REPLY\u003d\"${encoded}\"   #+or echo the result (EASIER)... or both... :p\n} \u0026\u0026 easier:  echo http://url/q?\u003d$( rawurlencode \"$args\" )\nfaster:  rawurlencode \"$args\"; echo http://url/q?${REPLY} \u0026\u0026 # Returns a string in which the sequences with percent (%) signs followed by\n# two hex digits have been replaced with literal characters.\nrawurldecode() {\n\n  # This is perhaps a risky gambit, but since all escape characters must be\n  # encoded, we can replace %NN with \\xNN and pass the lot to printf -b, which\n  # will decode hex for us\n\n  printf -v REPLY \u0027%b\u0027 \"${1//%/\\\\x}\" # You can either set a return variable (FASTER)\n\n  echo \"${REPLY}\"  #+or echo the result (EASIER)... or both... :p\n} \u0026\u0026 $ diff rawurlencode.inc.sh \\\n        \u003c( rawurldecode \"$( rawurlencode \"$( cat rawurlencode.inc.sh )\" )\" ) \\\n        \u0026\u0026 echo Matched\n\nOutput: Matched \u0026\u0026 replace_value\u003d$(echo $replace_value | sed -f /usr/lib/ddns/url_escape.sed) \u0026\u0026 # sed url escaping\ns:%:%25:g\ns: :%20:g\ns:\u003c:%3C:g\ns:\u003e:%3E:g\ns:#:%23:g\ns:{:%7B:g\ns:}:%7D:g\ns:|:%7C:g\ns:\\\\:%5C:g\ns:\\^:%5E:g\ns:~:%7E:g\ns:\\[:%5B:g\ns:\\]:%5D:g\ns:`:%60:g\ns:;:%3B:g\ns:/:%2F:g\ns:?:%3F:g\ns^:^%3A^g\ns:@:%40:g\ns:\u003d:%3D:g\ns:\u0026:%26:g\ns:\\$:%24:g\ns:\\!:%21:g\ns:\\*:%2A:g \u0026\u0026 ","...\n\nvalue\u003d\"$(perl -MURI::Escape -e \u0027print uri_escape($ARGV[0]);\u0027 \"$2\")\"\n... \u0026\u0026 ","echo -ne \u0027some random\\nbytes\u0027 | xxd -plain | tr -d \u0027\\n\u0027 | sed \u0027s/\\(..\\)/%\\1/g\u0027 \u0026\u0026 echo -ne \u0027some random\\nbytes\u0027 | hexdump -v -e \u0027/1 \"%02x\"\u0027 | sed \u0027s/\\(..\\)/%\\1/g\u0027 \u0026\u0026 ","encoded_value\u003d$(python -c \"import urllib; print urllib.quote(\u0027\u0027\u0027$value\u0027\u0027\u0027)\") \u0026\u0026 \"http://www.rai.it/dl/audio/\" \"1264165523944Ho servito il re d\u0027Inghilterra - Puntata 7 \u0026\u0026 "]}