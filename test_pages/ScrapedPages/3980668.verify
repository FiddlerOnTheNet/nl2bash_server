{"title":"How to get a password from a shell script without echoing","commands":["#!/bin/bash\n# Read Password\necho -n Password: \nread -s password\necho\n# Run Command\necho $password \u0026\u0026 ","#!/bin/bash\nstty -echo\nprintf \"Password: \"\nread PASSWORD\nstty echo\nprintf \"\\n\" \u0026\u0026 ","read -s -p \"Password: \" password \u0026\u0026 $ help read\nread: read [-ers] [-a array] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...]\nRead a line from the standard input and split it into fields.\n  ...\n  -p prompt output the string PROMPT without a trailing newline before\n            attempting to read\n  ...\n  -s                do not echo input coming from a terminal \u0026\u0026 ","#!/bin/sh\n\n# Read secret string\nread_secret()\n{\n    # Disable echo.\n    stty -echo\n\n    # Set up trap to ensure echo is enabled before exiting if the script\n    # is terminated while echo is disabled.\n    trap \u0027stty echo\u0027 EXIT\n\n    # Read secret.\n    read \"$@\"\n\n    # Enable echo.\n    stty echo\n    trap - EXIT\n\n    # Print a newline because the newline entered by the user after\n    # entering the passcode is not echoed. This ensures that the\n    # next line of output begins at a new line.\n    echo\n} \u0026\u0026 [susam@cube ~]$ read a b c\nfoo \\bar baz \\qux\n[susam@cube ~]$ echo a\u003d$a b\u003d$b c\u003d$c\na\u003dfoo b\u003dbar c\u003dbaz qux\n[susam@cube ~]$ unset a b c\n[susam@cube ~]$ read_secret a b c\n\n[susam@cube ~]$ echo a\u003d$a b\u003d$b c\u003d$c\na\u003dfoo b\u003dbar c\u003dbaz qux\n[susam@cube ~]$ unset a b c \u0026\u0026 [susam@cube ~]$ read -r a b c\nfoo \\bar baz \\qux\n[susam@cube ~]$ echo a\u003d$a b\u003d$b c\u003d$c\na\u003dfoo b\u003d\\bar c\u003dbaz \\qux\n[susam@cube ~]$ unset a b c\n[susam@cube ~]$ read_secret -r a b c\n\n[susam@cube ~]$ echo a\u003d$a b\u003d$b c\u003d$c\na\u003dfoo b\u003d\\bar c\u003dbaz \\qux\n[susam@cube ~]$ unset a b c \u0026\u0026 printf \"Password: \"\nread_secret password\n# Do something with $password here ... \u0026\u0026 ",null]}