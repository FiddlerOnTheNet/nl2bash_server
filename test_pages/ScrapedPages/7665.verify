{"title":"How to resolve symbolic links in a shell script","commands":[null,"readlink -f \"$path\" \u0026\u0026 realpath $path \u0026\u0026 readlink $path \u0026\u0026 ","#!/bin/bash\n\n# get the absolute path of the executable\nSELF_PATH\u003d$(cd -P -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd -P) \u0026\u0026 SELF_PATH\u003d$SELF_PATH/$(basename -- \"$0\")\n\n# resolve symlinks\nwhile [[ -h $SELF_PATH ]]; do\n    # 1) cd to directory of the symlink\n    # 2) cd to the directory of where the symlink points\n    # 3) get the pwd\n    # 4) append the basename\n    DIR\u003d$(dirname -- \"$SELF_PATH\")\n    SYM\u003d$(readlink \"$SELF_PATH\")\n    SELF_PATH\u003d$(cd \"$DIR\" \u0026\u0026 cd \"$(dirname -- \"$SYM\")\" \u0026\u0026 pwd)/$(basename -- \"$SYM\")\ndone \u0026\u0026 ","realpath - return the canonicalized absolute pathname\n\nrealpath  expands  all  symbolic  links  and resolves references to \u0027/./\u0027, \u0027/../\u0027 and extra \u0027/\u0027 characters in the null terminated string named by path and\n       stores the canonicalized absolute pathname in the buffer of size PATH_MAX named by resolved_path.  The resulting path will have no symbolic link, \u0027/./\u0027 or\n       \u0027/../\u0027 components. \u0026\u0026 ","readlink -e [filepath] \u0026\u0026 "]}