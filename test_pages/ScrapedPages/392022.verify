{"title":"What\u0027s the best way to send a signal to all members of a process group?","commands":["ps x -o  \"%p %r %y %x %c \" \u0026\u0026 ","PGID\u003d$(ps -o pgid\u003d $PID | grep -o [0-9]*)\nkill -TERM -\"$PGID\"  # kill -15\nkill -INT  -\"$PGID\"  # correspond to [CRTL+C] from keyboard\nkill -QUIT -\"$PGID\"  # correspond to [CRTL+\\] from keyboard\nkill -CONT -\"$PGID\"  # restart a stopped process (above signals do not kill it)\nsleep 2              # wait terminate process (more time if required)\nkill -KILL -\"$PGID\"  # kill -9 if it does not intercept signals (or buggy) \u0026\u0026 \u003e cat run-many-processes.sh\n#!/bin/sh\necho \"ProcessID\u003d$$ begins ($0)\"\n./child.sh background \u0026\n./child.sh foreground\necho \"ProcessID\u003d$$ ends ($0)\"\n\n\u003e cat child.sh\n#!/bin/sh\necho \"ProcessID\u003d$$ begins ($0)\"\n./grandchild.sh background \u0026\n./grandchild.sh foreground\necho \"ProcessID\u003d$$ ends ($0)\"\n\n\u003e cat grandchild.sh\n#!/bin/sh\necho \"ProcessID\u003d$$ begins ($0)\"\nsleep 9999\necho \"ProcessID\u003d$$ ends ($0)\" \u0026\u0026 \u003e ./run-many-processes.sh \u0026    \nProcessID\u003d28957 begins (./run-many-processes.sh)\nProcessID\u003d28959 begins (./child.sh)\nProcessID\u003d28958 begins (./child.sh)\nProcessID\u003d28960 begins (./grandchild.sh)\nProcessID\u003d28961 begins (./grandchild.sh)\nProcessID\u003d28962 begins (./grandchild.sh)\nProcessID\u003d28963 begins (./grandchild.sh)\n\n\u003e PID\u003d$!                    # get the Parent Process ID\n\u003e PGID\u003d$(ps opgid\u003d \"$PID\")  # get the Process Group ID\n\n\u003e ps fj\n PPID   PID  PGID   SID TTY      TPGID STAT   UID   TIME COMMAND\n28348 28349 28349 28349 pts/3    28969 Ss   33021   0:00 -bash\n28349 28957 28957 28349 pts/3    28969 S    33021   0:00  \\_ /bin/sh ./run-many-processes.sh\n28957 28958 28957 28349 pts/3    28969 S    33021   0:00  |   \\_ /bin/sh ./child.sh background\n28958 28961 28957 28349 pts/3    28969 S    33021   0:00  |   |   \\_ /bin/sh ./grandchild.sh background\n28961 28965 28957 28349 pts/3    28969 S    33021   0:00  |   |   |   \\_ sleep 9999\n28958 28963 28957 28349 pts/3    28969 S    33021   0:00  |   |   \\_ /bin/sh ./grandchild.sh foreground\n28963 28967 28957 28349 pts/3    28969 S    33021   0:00  |   |       \\_ sleep 9999\n28957 28959 28957 28349 pts/3    28969 S    33021   0:00  |   \\_ /bin/sh ./child.sh foreground\n28959 28960 28957 28349 pts/3    28969 S    33021   0:00  |       \\_ /bin/sh ./grandchild.sh background\n28960 28964 28957 28349 pts/3    28969 S    33021   0:00  |       |   \\_ sleep 9999\n28959 28962 28957 28349 pts/3    28969 S    33021   0:00  |       \\_ /bin/sh ./grandchild.sh foreground\n28962 28966 28957 28349 pts/3    28969 S    33021   0:00  |           \\_ sleep 9999\n28349 28969 28969 28349 pts/3    28969 R+   33021   0:00  \\_ ps fj \u0026\u0026 \u003e pkill -P \"$PID\"\n./run-many-processes.sh: line 4: 28958 Terminated              ./child.sh background\n./run-many-processes.sh: line 4: 28959 Terminated              ./child.sh foreground\nProcessID\u003d28957 ends (./run-many-processes.sh)\n[1]+  Done                    ./run-many-processes.sh\n\n\u003e ps fj\n PPID   PID  PGID   SID TTY      TPGID STAT   UID   TIME COMMAND\n28348 28349 28349 28349 pts/3    28987 Ss   33021   0:00 -bash\n28349 28987 28987 28349 pts/3    28987 R+   33021   0:00  \\_ ps fj\n    1 28963 28957 28349 pts/3    28987 S    33021   0:00 /bin/sh ./grandchild.sh foreground\n28963 28967 28957 28349 pts/3    28987 S    33021   0:00  \\_ sleep 9999\n    1 28962 28957 28349 pts/3    28987 S    33021   0:00 /bin/sh ./grandchild.sh foreground\n28962 28966 28957 28349 pts/3    28987 S    33021   0:00  \\_ sleep 9999\n    1 28961 28957 28349 pts/3    28987 S    33021   0:00 /bin/sh ./grandchild.sh background\n28961 28965 28957 28349 pts/3    28987 S    33021   0:00  \\_ sleep 9999\n    1 28960 28957 28349 pts/3    28987 S    33021   0:00 /bin/sh ./grandchild.sh background\n28960 28964 28957 28349 pts/3    28987 S    33021   0:00  \\_ sleep 9999 \u0026\u0026 \u003e kill --    -\"$PGID\"  # default signal is TERM (kill -15)\n\u003e kill -CONT -\"$PGID\"  # awake stopped processes\n\u003e kill -KILL -\"$PGID\"  # kill -9 to be sure\n\n\u003e ps fj\n PPID   PID  PGID   SID TTY      TPGID STAT   UID   TIME COMMAND\n28348 28349 28349 28349 pts/3    29039 Ss   33021   0:00 -bash\n28349 29039 29039 28349 pts/3    29039 R+   33021   0:00  \\_ ps fj \u0026\u0026 ","pkill -TERM -P 27888 \u0026\u0026 CPIDS\u003d$(pgrep -P 27888); (sleep 33 \u0026\u0026 kill -KILL $CPIDS \u0026); kill -TERM $CPIDS \u0026\u0026 ","#!/bin/bash\n\nkilltree() {\n    local _pid\u003d$1\n    local _sig\u003d${2:--TERM}\n    kill -stop ${_pid} # needed to stop quickly forking parent from producing children between child killing and parent killing\n    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do\n        killtree ${_child} ${_sig}\n    done\n    kill -${_sig} ${_pid}\n}\n\nif [ $# -eq 0 -o $# -gt 2 ]; then\n    echo \"Usage: $(basename $0) \u003cpid\u003e [signal]\"\n    exit 1\nfi\n\nkilltree $@ \u0026\u0026 ","rkill [-SIG] pid/name... \u0026\u0026 "]}