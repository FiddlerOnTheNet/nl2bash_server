{"title":"How to add a progress bar to a shell script?","commands":["echo -ne \u0027#####                     (33%)\\r\u0027\nsleep 1\necho -ne \u0027#############             (66%)\\r\u0027\nsleep 1\necho -ne \u0027#######################   (100%)\\r\u0027\necho -ne \u0027\\n\u0027 \u0026\u0026 ","i\u003d1\nsp\u003d\"/-\\|\"\necho -n \u0027 \u0027\nwhile true\ndo\n    printf \"\\b${sp:i++%${#sp}:1}\"\ndone \u0026\u0026 sp\u003d\u0027/-\\|\u0027\nprintf \u0027 \u0027\nwhile true; do\n    printf \u0027\\b%.1s\u0027 \"$sp\"\n    sp\u003d${sp#?}${sp%???}\ndone \u0026\u0026 sp\u003d\"/-\\|\"\nsc\u003d0\nspin() {\n   printf \"\\b${sp:sc++:1}\"\n   ((sc\u003d\u003d${#sp})) \u0026\u0026 sc\u003d0\n}\nendspin() {\n   printf \"\\r%s\\n\" \"$@\"\n}\n\nuntil work_done; do\n   spin\n   some_work ...\ndone\nendspin \u0026\u0026 ","$ pmonitor -c gzip\n/home/dds/data/mysql-2015-04-01.sql.gz 58.06% \u0026\u0026 ",null,"#!/bin/bash\n# 1. Create ProgressBar function\n# 1.1 Input is currentState($1) and totalState($2)\nfunction ProgressBar {\n# Process data\n    let _progress\u003d(${1}*100/${2}*100)/100\n    let _done\u003d(${_progress}*4)/10\n    let _left\u003d40-$_done\n# Build progressbar string lengths\n    _fill\u003d$(printf \"%${_done}s\")\n    _empty\u003d$(printf \"%${_left}s\")\n\n# 1.2 Build progressbar strings and print the ProgressBar line\n# 1.2.1 Output example:\n# 1.2.1.1 Progress : [########################################] 100%\nprintf \"\\rProgress : [${_fill// /#}${_empty// /-}] ${_progress}%%\"\n\n}\n\n# Variables\n_start\u003d1\n\n# This accounts as the \"totalState\" variable for the ProgressBar function\n_end\u003d100\n\n# Proof of concept\nfor number in $(seq ${_start} ${_end})\ndo\n    sleep 0.1\n    ProgressBar ${number} ${_end}\ndone\nprintf \u0027\\nFinished!\\n\u0027 \u0026\u0026 "]}