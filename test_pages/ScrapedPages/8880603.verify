{"title":"Loop through an array of strings in Bash?","commands":["## declare an array variable\ndeclare -a arr\u003d(\"element1\" \"element2\" \"element3\")\n\n## now loop through the above array\nfor i in \"${arr[@]}\"\ndo\n   echo \"$i\"\n   # or do whatever with individual element of the array\ndone\n\n# You can access them using echo \"${arr[0]}\", \"${arr[1]}\" also \u0026\u0026 declare -a arr\u003d(\"element1\" \n                \"element2\" \"element3\"\n                \"element4\"\n                ) \u0026\u0026 ","for databaseName in a b c d e f; do\n  # do something like: echo $databaseName\ndone \u0026\u0026 ","#!/bin/bash\n## declare an array variable\ndeclare -a array\u003d(\"one\" \"two\" \"three\")\n\n# get length of an array\narraylength\u003d${#array[@]}\n\n# use for loop to read all values and indexes\nfor (( i\u003d1; i\u003c${arraylength}+1; i++ ));\ndo\n  echo $i \" / \" ${arraylength} \" : \" ${array[$i-1]}\ndone \u0026\u0026 1  /  3  :  one\n2  /  3  :  two\n3  /  3  :  three \u0026\u0026 ","listOfNames\u003d\"RA\nRB\nR C\nRD\"\n\n# To allow for other whitespace in the string:\n# 1. add double quotes around the list variable, or\n# 2. see the IFS note (under \u0027Side Notes\u0027)\n\nfor databaseName in \"$listOfNames\"   #  \u003c-- Note: Added \"\" quotes.\ndo\n  echo \"$databaseName\"  # (i.e. do action / processing of $databaseName here...)\ndone\n\n# Outputs\n# RA\n# RB\n# R C\n# RD \u0026\u0026 listOfNames\u003d\"RA\nRB\nR C\nRD\"\n\nfor databaseName in $listOfNames  # Note: No quotes\ndo\n  echo \"$databaseName\"  # (i.e. do action / processing of $databaseName here...)\ndone\n\n# Outputs\n# RA\n# RB\n# R\n# C\n# RD \u0026\u0026 # line delimited (each databaseName is stored on a line)\nwhile read databaseName\ndo\n  echo \"$databaseName\"  # i.e. do action / processing of $databaseName here...\ndone # \u003c\u003c\u003c or_another_input_method_here \u0026\u0026 ","#!/bin/bash\n# declare an array called files, that contains 3 values\nfiles\u003d( \"/etc/passwd\" \"/etc/group\" \"/etc/hosts\" )\nfor i in \"${files[@]}\"\ndo\n    echo \"$i\"\ndone \u0026\u0026 "]}