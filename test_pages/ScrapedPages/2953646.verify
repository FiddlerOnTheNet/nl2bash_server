{"title":"How to declare and use boolean variables in shell script?","commands":["the_world_is_flat\u003dtrue\n# ...do something interesting...\nif [ \"$the_world_is_flat\" \u003d true ] ; then\n    echo \u0027Be careful not to fall off!\u0027\nfi \u0026\u0026 the_world_is_flat\u003dtrue\n# ...do something interesting...\nif $the_world_is_flat ; then\n    echo \u0027Be careful not to fall off!\u0027\nfi \u0026\u0026 ","bool\u003dtrue\n\nif [ \"$bool\" \u003d true ] \u0026\u0026 if $var; then\n  echo \u0027Muahahaha!\u0027\nfi \u0026\u0026 # Variable var not defined beforehand. Case 1\nvar\u003d\u0027\u0027  # Equivalent to var\u003d\"\".        Case 2\nvar\u003d    #                              Case 3\nunset var  #                           Case 4\nvar\u003d\u0027\u003csome valid command\u003e\u0027  #          Case 5 \u0026\u0026 var\u003d\u0027echo this text will be displayed when the condition is evaluated\u0027\nif $var; then\n  echo \u0027Muahahaha!\u0027\nfi\n\n# Outputs:\n# this text will be displayed when the condition is evaluated\n# Muahahaha! \u0026\u0026 var\u003dfalse\nif [ $var ]; then\n  echo \"This won\u0027t print, var is false!\"\nfi\n\n# Outputs:\n# This won\u0027t print, var is false! \u0026\u0026 bool\u003dtrue\n\nif [ \"$bool\" \u003d true ]; then\nif [ \"$bool\" \u003d \"true\" ]; then\n\nif [[ \"$bool\" \u003d true ]]; then\nif [[ \"$bool\" \u003d \"true\" ]]; then\nif [[ \"$bool\" \u003d\u003d true ]]; then\nif [[ \"$bool\" \u003d\u003d \"true\" ]]; then\n\nif test \"$bool\" \u003d true; then\nif test \"$bool\" \u003d \"true\"; then \u0026\u0026 ","the_world_is_flat\u003dyeah\nif [ \"$the_world_is_flat\" \u003d yeah ]; then\n    echo \u0027Be careful not to fall off!\u0027\nfi \u0026\u0026 the_world_is_flat\u003dtrue\nif $the_world_is_flat; then\n  echo \u0027Be careful not to fall off!\u0027\nfi \u0026\u0026 var\u003dreboot\nif $var; then\n  echo \u0027Muahahaha! You are going down!\u0027\nfi \u0026\u0026 var\u003dreboot\nif [ $var ]; then\n  echo \u0027Nice try.\u0027\nfi \u0026\u0026 ","#!/bin/bash\n\nfalse\u003d0\ntrue\u003d1\n\n((false)) \u0026\u0026 echo false\n((true)) \u0026\u0026 echo true\n((!false)) \u0026\u0026 echo not false\n((!true)) \u0026\u0026 echo not true \u0026\u0026 ","FLAG\u003d\"up or \u003cset\u003e\"\n\nif [ \"$FLAG\" ] ; then \n    echo \u0027Is true\u0027\nelse \n    echo \u0027Is false\u0027\nfi\n\n# unset FLAG\n#    also works\nFLAG\u003d\n\nif [ \"$FLAG\" ] ; then\n    echo \u0027Continues true\u0027\nelse\n    echo \u0027Turned false\u0027\nfi \u0026\u0026 FLAG\u003d\"u p\"\nCOUNT\u003d3\n\nif [[ $FLAG  \u0026\u0026 $COUNT -gt \u00271\u0027 ]] ; then \n    echo \u0027Flag up, count bigger than 1\u0027\nelse \n    echo \u0027Nope\u0027\nfi \u0026\u0026 "]}