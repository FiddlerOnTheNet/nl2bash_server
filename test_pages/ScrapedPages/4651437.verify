{"title":"How to set a variable to the output of a command in Bash?","commands":["OUTPUT\u003d\"$(ls -1)\"\necho \"${OUTPUT}\" \u0026\u0026 ","$(sudo run command) \u0026\u0026 #!/bin/bash\n\nVAR1\u003d\"$1\"\nVAR2\u003d\"$2\"\n\nMOREF\u003d`sudo run command against \"$VAR1\" | grep name | cut -c7-`\n\necho \"$MOREF\" \u0026\u0026 ",null,"func (){\nls -l\n} \u0026\u0026 var\u003d\"ls -l\"\neval $var \u0026\u0026 var\u003d$(ls -l)\nOR\nvar\u003d`ls -l` \u0026\u0026 echo \"$var\" \u0026\u0026 echo $var \u0026\u0026 ","myPi\u003d`echo \u00274*a(1)\u0027 | bc -l`\necho $myPi \n3.14159265358979323844 \u0026\u0026 myPi\u003d$(bc -l \u003c\u003c\u003c\u00274*a(1)\u0027) \u0026\u0026 SysStarted\u003d$(date -d \"$(ps ho lstart 1)\" +%s)\necho $SysStarted \n1480656334 \u0026\u0026 df -k /\nFilesystem     1K-blocks   Used Available Use% Mounted on\n/dev/dm-0         999320 529020    401488  57% / \u0026\u0026 array\u003d($(df -k /)) \u0026\u0026 declare -p array\ndeclare -a array\u003d\u0027([0]\u003d\"Filesystem\" [1]\u003d\"1K-blocks\" [2]\u003d\"Used\" [3]\u003d\"Available\" [\n4]\u003d\"Use%\" [5]\u003d\"Mounted\" [6]\u003d\"on\" [7]\u003d\"/dev/dm-0\" [8]\u003d\"999320\" [9]\u003d\"529020\" [10]\u003d\n\"401488\" [11]\u003d\"57%\" [12]\u003d\"/\")\u0027 \u0026\u0026 echo ${array[9]}\n529020 \u0026\u0026 { read foo ; read filesystem size used avail prct mountpoint ; } \u003c \u003c(df -k /)\necho $used\n529020 \u0026\u0026 #!/bin/bash\n\ndeclare free\u003d0 total\u003d0 used\u003d0\n\ngetDiskStat() {\n    local foo\n    {\n        read foo\n        read foo total used free foo\n    } \u003c \u003c(\n        df -k ${1:-/}\n    )\n}\n\ngetDiskStat $1\necho $total $used $free \u0026\u0026 shell\u003d$(cat /etc/passwd | grep $USER | cut -d : -f 7)\necho $shell\n/bin/bash \u0026\u0026 shell\u003d$(grep $USER \u003c/etc/passwd | cut -d : -f 7) \u0026\u0026 shell\u003d$(sed \u003c/etc/passwd \"s/^$USER:.*://p;d\")\necho $shell \u0026\u0026 while IFS\u003d: read -a line ; do\n    [ \"$line\" \u003d \"$USER\" ] \u0026\u0026 shell\u003d${line[6]}\n  done \u003c/etc/passwd\necho $shell\n/bin/bash \u0026\u0026 while IFS\u003d: read loginname encpass uid gid fullname home shell;do\n    [ \"$loginname\" \u003d \"$USER\" ] \u0026\u0026 break\n  done \u003c/etc/passwd\necho $shell $loginname ... \u0026\u0026 myPi\u003d$(bc -l \u003c\u003c\u003c\u00274*a(1)\u0027\nmyRay\u003d12\nmyCirc\u003d$(bc -l \u003c\u003c\u003c\" 2 * $myPi * $myRay \") \u0026\u0026 myStarted\u003d$(date -d \"$(ps ho lstart 1)\" +%s)\nmySessStart\u003d$(date -d \"$(ps ho lstart $$)\" +%s) \u0026\u0026 bc -l \u003c\u003c\u003c$\u00273*4\\n5*6\u0027\n12\n30\n\ndate -f - +%s \u003c \u003c(ps ho lstart 1 $$)\n1516030449\n1517853288 \u0026\u0026 mkfifo /tmp/myFifoForBc\nexec 5\u003e \u003e(bc -l \u003e/tmp/myFifoForBc)\nexec 6\u003c/tmp/myFifoForBc\nrm /tmp/myFifoForBc \u0026\u0026 echo \"3*4\" \u003e\u00265\nread -u 6 foo\necho $foo\n12\n\necho \u003e\u00265 \"pi\u003d4*a(1)\"\necho \u003e\u00265 \"2*pi*12\"\nread -u 6 foo\necho $foo\n75.39822368615503772256 \u0026\u0026 . shell_connector.sh\n\ntty\n/dev/pts/20\n\nps --tty pts/20 fw\n    PID TTY      STAT   TIME COMMAND\n  29019 pts/20   Ss     0:00 bash\n  30745 pts/20   R+     0:00  \\_ ps --tty pts/20 fw\n\nnewConnector /usr/bin/bc \"-l\" \u00273*4\u0027 12\n\nps --tty pts/20 fw\n    PID TTY      STAT   TIME COMMAND\n  29019 pts/20   Ss     0:00 bash\n  30944 pts/20   S      0:00  \\_ /usr/bin/bc -l\n  30952 pts/20   R+     0:00  \\_ ps --tty pts/20 fw\n\ndeclare -p PI\nbash: declare: PI: not found\n\nmyBc \u00274*a(1)\u0027 PI\ndeclare -p PI\ndeclare -- PI\u003d\"3.14159265358979323844\" \u0026\u0026 newConnector /bin/date \u0027-f - +%s\u0027 @0 0\nmyDate \u00272000-01-01\u0027\n  946681200\nmyDate \"$(ps ho lstart 1)\" boottime\nmyDate now now ; read utm idl \u003c/proc/uptime\nmyBc \"$now-$boottime\" uptime\nprintf \"%s\\n\" ${utm%%.*} $uptime\n  42134906\n  42134906\n\nps --tty pts/20 fw\n    PID TTY      STAT   TIME COMMAND\n  29019 pts/20   Ss     0:00 bash\n  30944 pts/20   S      0:00  \\_ /usr/bin/bc -l\n  32615 pts/20   S      0:00  \\_ /bin/date -f - +%s\n   3162 pts/20   R+     0:00  \\_ ps --tty pts/20 fw \u0026\u0026 eval \"exec $DATEOUT\u003e\u0026-\"\neval \"exec $DATEIN\u003e\u0026-\"\nps --tty pts/20 fw\n    PID TTY      STAT   TIME COMMAND\n   4936 pts/20   Ss     0:00 bash\n   5256 pts/20   S      0:00  \\_ /usr/bin/bc -l\n   6358 pts/20   R+     0:00  \\_ ps --tty pts/20 fw \u0026\u0026 "]}